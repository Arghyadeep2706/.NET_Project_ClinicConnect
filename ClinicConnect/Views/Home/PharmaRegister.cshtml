@* @model ClinicConnect.Models.Pharmacist

@{
    ViewData["Title"] = "Pharmacist Registration";
}

<h2>Pharmacist Registration</h2>

<div>
    @if (ViewData["v"] != null)
    {
        <div class="alert alert-info">@ViewData["v"]</div>
    }
</div>

<form asp-action="PharmaRegister" method="post">
    <div class="form-group">
        @Html.LabelFor(m => m.PharmName)
        @Html.EditorFor(m => m.PharmName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.PharmName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PharmEmail)
        @Html.EditorFor(m => m.PharmEmail, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.PharmEmail, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PharmPhoneNo)
        @Html.EditorFor(m => m.PharmPhoneNo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.PharmPhoneNo, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PharmAddress)
        @Html.EditorFor(m => m.PharmAddress, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.PharmAddress, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NormPassword)
        @Html.EditorFor(m => m.NormPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
        @Html.ValidationMessageFor(m => m.NormPassword, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</form>

<div>
    <a asp-action="Index">Back to list</a>
</div>

 *@